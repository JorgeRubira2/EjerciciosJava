¿Qué es OOPS?
La Programación Orientada a Objetos es un concepto de programación que funciona según el principio de que los objetos son la parte más importante de su programa. Permite a los usuarios crear los objetos que desean y luego crear métodos para manejar esos objetos. Manipular estos objetos para obtener resultados es el objetivo de la Programación Orientada a Objetos.

Programación orientada a objetos popularmente conocida como OOP, se utiliza en un lenguaje de programación moderno como Java

Los conceptos básicos de OOPS son

1) Clase
La clase es un grupo de entidades similares. Es solo un componente lógico y no la entidad física. Por ejemplo, si tuviera una clase llamada “Carros costosos”, podría tener objetos como Mercedes, BMW, Toyota, etc. Sus propiedades (datos) pueden ser el precio o la velocidad de estos automóviles. Si bien los métodos se pueden realizar con estos automóviles son de conducción, marcha atrás, frenado, etc.

2) Objeto

Un objeto se puede definir como una instancia de una clase, y puede haber múltiples instancias de un objeto en un programa. Un objeto contiene tanto los datos como la función, que opera en los datos. Por ejemplo, silla, bicicleta, marcador, pluma, mesa, automóvil, etc.

3) Herencia

La herencia es un concepto OOPS en el que un objeto adquiere las propiedades y el comportamiento del objeto principal. Está creando una relación padre-hijo entre dos clases. Ofrece un mecanismo robusto y natural para organizar y estructurar cualquier software.




4) Polimorfismo

El polimorfismo se refiere a la capacidad de una variable, objeto o función para tomar múltiples formas. Por ejemplo, en inglés, el verbo “ejecutar” tiene un significado diferente si lo usa con “una computadora portátil”, “una carrera de pie” y “negocios”. Aquí, entendemos el significado de “ejecutar” según las otras palabras usado junto con él. Lo mismo también se aplica al polimorfismo.

5) Abstracción

Una abstracción es un acto de representación de características esenciales sin incluir detalles de fondo. Es una técnica de creación de un nuevo tipo de datos que es adecuado para una aplicación específica. Por ejemplo, mientras conduce un automóvil, no tiene que preocuparse por su funcionamiento interno. Aquí solo debes preocuparte por partes como el volante, los engranajes, el acelerador, etc.

6) Encapsulación

La encapsulación es una técnica OOP para envolver los datos y el código. En este concepto OOPS, las variables de una clase siempre están ocultas de otras clases. Solo se puede acceder usando los métodos de su clase actual. Por ejemplo, en la escuela, un estudiante no puede existir sin una clase.

7) Asociación

La asociación es una relación entre dos objetos. Define la diversidad entre los objetos. En este concepto de OOP, todos los objetos tienen su ciclo de vida separado, y no hay propietario. Por ejemplo, muchos estudiantes pueden asociarse con un profesor, mientras que un alumno también puede asociarse con varios profesores.

8) Agregación

En esta técnica, todos los objetos tienen su ciclo de vida separado. Sin embargo, hay propiedad tal que el objeto secundario no puede pertenecer a otro objeto primario. Por ejemplo, considere el departamento de clase / objetos y el profesor. Aquí, un solo maestro no puede pertenecer a múltiples departamentos, pero incluso si eliminamos el departamento, el objeto maestro nunca será destruido.

9) Composición

Una composición es una forma especializada de Agregación. También se llama relación de “muerte”. Los objetos secundarios no tienen su ciclo de vida así que cuando el objeto primario elimina todos los objetos secundarios también se eliminarán automáticamente. Para eso, tomemos un ejemplo de Casa y habitaciones. Cualquier casa puede tener varias habitaciones. Una habitación no puede formar parte de dos casas diferentes. Por lo tanto, si elimina la sala de la casa también se eliminará.


